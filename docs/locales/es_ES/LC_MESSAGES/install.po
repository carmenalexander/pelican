# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010–2023
# This file is distributed under the same license as the Pelican package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Pelican 4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-03 17:37+0100\n"
"PO-Revision-Date: 2023-01-04 09:48+0100\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: es_ES\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Generator: Poedit 3.2.2\n"

#: ../../install.rst:2
msgid "Installing Pelican"
msgstr "Instalar Pelican"

#: ../../install.rst:4
msgid ""
"Pelican currently runs best on 3.7+; earlier versions of Python are not "
"supported."
msgstr ""
"Pelican actualmente funciona mejor en 3.7+; no están soportadas versiones "
"anteriores."

#: ../../install.rst:6
msgid ""
"You can install Pelican via several different methods. The simplest is via "
"Pip_::"
msgstr "Puedes instalar Pelican de varias formas. La más simple es con Pip_::"

#: ../../install.rst:10
msgid "Or, if you plan on using Markdown::"
msgstr "O, si piensas utilizar Markdown::"

#: ../../install.rst:14
msgid ""
"(Keep in mind that some operating systems will require you to prefix the above "
"command with ``sudo`` in order to install Pelican system-wide.)"
msgstr ""
"(Ten en cuenta que algunos sistemas operativos requieren que prefijes el "
"anterior comando con ``sudo`` para instalar Pelican en todo el sistema.)"

#: ../../install.rst:17
msgid ""
"While the above is the simplest method, the recommended approach is to create "
"a virtual environment for Pelican via virtualenv_ before installing Pelican. "
"Assuming you have virtualenv_ installed, you can then open a new terminal "
"session and create a new virtual environment for Pelican::"
msgstr ""
"Aunque el anterior es el método más simple, el método recomendado es crear un "
"entorno virtual para Pelican mediante virtualenv_ antes de instalar Pelican. "
"Asumiendo que tienes virtualenv_ instalado, puedes abrir una sesión de "
"terminal y crear un nuevo entorno virtual para Pelican::"

#: ../../install.rst:26
msgid ""
"Once the virtual environment has been created and activated, Pelican can be "
"installed via ``python -m pip install pelican`` as noted above. Alternatively, "
"if you have the project source, you can install Pelican using the distutils "
"method::"
msgstr ""
"Una vez se haya creado y activado el entorno virtual, se podrá instalar "
"Pelican mediante ``python -m pip install pelican`` como se indicó "
"anteriormente. Alternativamente, si tienes el código fuente del proyecto, "
"puedes instalar Pelican usando el método de ``distutils``::"

#: ../../install.rst:33
msgid ""
"If you have Git installed and prefer to install the latest bleeding-edge "
"version of Pelican rather than a stable release, use the following command::"
msgstr ""
"Si tienes Git instalado y prefieres instalar la ultimísima versión de Pelican "
"en vez de una versión estable, usa el siguiente comando::"

#: ../../install.rst:38
msgid ""
"Once Pelican is installed, you can run ``pelican --help`` to see basic usage "
"options. For more detail, refer to the :doc:`Publish<publish>` section."
msgstr ""
"Una vez que Pelican esté instalado, puedes ejecutar ``pelican --help`` para "
"ver opciones básicas de uso. Para más detalle consulta la sección :doc:"
"`Publicar<publish>`."

#: ../../install.rst:42
msgid "Optional packages"
msgstr "Paquetes opcionales"

#: ../../install.rst:44
msgid ""
"If you plan on using `Markdown <https://pypi.org/project/Markdown/>`_ as a "
"markup format, you can install Pelican with Markdown support::"
msgstr ""
"Si piensas usar `Markdown <https://pypi.org/project/Markdown/>`_ como formato "
"de marcado, puedes instalar Pelican con soporte para Markdown::"

#: ../../install.rst:49
msgid ""
"Typographical enhancements can be enabled in your settings file, but first the "
"requisite `Typogrify <https://pypi.org/project/typogrify/>`_ library must be "
"installed::"
msgstr ""
"Se pueden habilitar mejoras tipográficas en tu archivo de ajustes, pero "
"primero la biblioteca requerida Typogrify <https://pypi.org/project/typogrify/"
">`_ debe ser instalada::"

#: ../../install.rst:56
msgid "Dependencies"
msgstr "Dependencias"

#: ../../install.rst:58
msgid ""
"When Pelican is installed, the following dependent Python packages should be "
"automatically installed without any action on your part:"
msgstr ""
"Cuando se instale Pelican, los siguientes paquetes Python dependientes "
"deberían de instalarse automáticamente sin ninguna acción por tu parte:"

#: ../../install.rst:61
msgid ""
"`feedgenerator <https://pypi.org/project/feedgenerator/>`_, to generate the "
"Atom feeds"
msgstr ""
"`feedgenerator <https://pypi.org/project/feedgenerator/>`_, para generar las "
"fuentes Atom"

#: ../../install.rst:63
msgid "`jinja2 <https://pypi.org/project/Jinja2/>`_, for templating support"
msgstr "`jinja2 <https://pypi.org/project/Jinja2/>`_, para soporte de plantillas"

#: ../../install.rst:64
msgid "`pygments <https://pypi.org/project/Pygments/>`_, for syntax highlighting"
msgstr ""
"`pygments <https://pypi.org/project/Pygments/>`_, para resaltado de sintaxis"

#: ../../install.rst:65
msgid ""
"`docutils <https://pypi.org/project/docutils/>`_, for supporting "
"reStructuredText as an input format"
msgstr ""
"`docutils <https://pypi.org/project/docutils/>`_, para permitir "
"reStructuredText como formato de entrada"

#: ../../install.rst:67
msgid "`pytz <https://pypi.org/project/pytz/>`_, for timezone definitions"
msgstr ""
"`pytz <https://pypi.org/project/pytz/>`_, para definiciones de zona horaria"

#: ../../install.rst:68
msgid ""
"`blinker <https://pypi.org/project/blinker/>`_, an object-to-object and "
"broadcast signaling system"
msgstr ""
"`blinker <https://pypi.org/project/blinker/>`_, como un sistema de "
"señalización *broadcast* y objeto a objeto"

#: ../../install.rst:70
msgid ""
"`unidecode <https://pypi.org/project/Unidecode/>`_, for ASCII transliterations "
"of Unicode text utilities"
msgstr ""
"`unidecode <https://pypi.org/project/Unidecode/>`_, para herramientas de "
"transliteraciones ASCII de texto Unicode"

#: ../../install.rst:73
msgid ""
"`MarkupSafe <https://pypi.org/project/MarkupSafe/>`_, for a markup-safe string "
"implementation"
msgstr ""
"`MarkupSafe <https://pypi.org/project/MarkupSafe/>`_, para una implementación "
"de cadenas de marcado segura"

#: ../../install.rst:75
msgid ""
"`python-dateutil <https://pypi.org/project/python-dateutil/>`_, to read the "
"date metadata"
msgstr ""
"`python-dateutil <https://pypi.org/project/python-dateutil/>`_, para leer los "
"metadatos de fecha"

#: ../../install.rst:79
msgid "Upgrading"
msgstr "Actualizar"

#: ../../install.rst:81
msgid ""
"If you installed a stable Pelican release via Pip_ and wish to upgrade to the "
"latest stable release, you can do so by adding ``--upgrade``::"
msgstr ""
"Si instalaste una publicación de Pelican estable mediante Pip_ y te gustaría "
"actualizar a la última publicación estable, puedes hacerlo añadiendo ``--"
"upgrade``::"

#: ../../install.rst:86
msgid ""
"If you installed Pelican via distutils or the bleeding-edge method, simply "
"perform the same step to install the most recent version."
msgstr ""
"Si instalaste Pelican mediante ``distutils`` o el método de la ultimísima "
"versión, simplemente haz lo mismo que hiciste para instalar la versión más "
"reciente."

#: ../../install.rst:90
msgid "Kickstart your site"
msgstr "Poner en marcha tu sitio web"

#: ../../install.rst:92
msgid ""
"Once Pelican has been installed, you can create a skeleton project via the "
"``pelican-quickstart`` command, which begins by asking some questions about "
"your site::"
msgstr ""
"Una vez que Pelican haya sido instalado, puedes crear un proyecto de base "
"mediante el comando ``pelican-quickstart``, que comienza preguntando algunas "
"preguntas sobre tu sitio web::"

#: ../../install.rst:98
msgid ""
"If run inside an activated virtual environment, ``pelican-quickstart`` will "
"look for an associated project path inside ``$VIRTUAL_ENV/.project``. If that "
"file exists and contains a valid directory path, the new Pelican project will "
"be saved at that location. Otherwise, the default is the current working "
"directory. To set the new project path on initial invocation, use: ``pelican-"
"quickstart --path /your/desired/directory``"
msgstr ""
"Si lo ejecutas dentro de un entorno virtual activado, ``pelican-quickstart`` "
"buscará una ruta de proyecto asociada dentro de ``$VIRTUAL_ENV/.project``. Si "
"ese archivo existe y contiene una ruta de directorio válida, el nuevo proyecto "
"de Pelican será guardado en esa ubicación. De lo contrario, la predeterminada "
"es el directorio de trabajo actual. Para asignar la nueva ruta del proyecto en "
"la llamada inicial usa ``pelican-quickstart --path /tu/directorio/deseado``"

#: ../../install.rst:105
msgid ""
"Once you finish answering all the questions, your project will consist of the "
"following hierarchy (except for *pages* — shown in parentheses below — which "
"you can optionally add yourself if you plan to create non-chronological "
"content)::"
msgstr ""
"Una vez que termines de responder a todas las preguntas, tu proyecto constará "
"de la siguiente jerarquía (excepto para **pages** —montrado abajo en paréntesis"
"— , que puedes añadir por ti mismo opcionalmente si tienes previsto crear "
"contenido no cronológico)::"

#: ../../install.rst:119
msgid ""
"The next step is to begin to adding content to the *content* folder that has "
"been created for you."
msgstr ""
"El siguiente paso es empezar a añadir contenido a la carpeta *content* que ha "
"sido creada para ti."
